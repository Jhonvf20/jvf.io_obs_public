<?xml version="1.0" encoding="UTF-8"?><?Siebel-Property-Set EscapeNames="true"?><Business_spcService
 Comments=""
 State_spcManagement_spcType="Stateful"
 Cache="N"
 Server_spcEnabled="N"
 Display_spcName="JVF Dev Utilities"
 Inactive="N"
 Hidden="N"
 Class="CSSService"
 Name="Utilities Service BS"
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="var _uslogs = [];_newlinevar _usjsonLogs = [];_newlinevar _usexternalLogs = [];"
 Program_spcLanguage="JS"
 Name="(declarations)"
 Sequence="1"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function CleanAttributes(sAttr) {_newline    try{_newline        var tl = 0;_newline        var ta = sAttr.split(&quot;*&quot;);_newline        var t = &quot;&quot;;_newline        var tt = [];_newline        //everything before first * is the length of the next section_newline        //8*Personal6*Person0*8*Owner Id0*0*_newline        tl = parseInt(ta[0]);_newline        for (var i = 1; i &lt; ta.length; i++) {_newline            if (tl == 0) {_newline                t = &quot;&quot;;_newline            }_newline           //kudos to Henkrik T._newline           else if (ta[i].length &lt; tl) {_newline                    ta[i+1] = ta[i] + &quot;*&quot; + ta[i+1];_newline                    continue;_newline            }_newline            //end_newline            else {_newline                t = ta[i].substring(0, tl);_newline            }_newline            tl = parseInt(ta[i].substring(tl, ta[i].length));_newline            tt.push(t);_newline        }_newline    }_newline    catch(e){_newline       // TheApplication().RaiseErrorText(&quot;Error in CleanAttributes: &quot; + e.toString());_newline    }_newline    return tt;_newline}"
 Program_spcLanguage="JS"
 Name="CleanAttributes"
 Sequence="7"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function EvalExpr (Inputs, Outputs) {_newline    _newline    var sExpr = Inputs.GetProperty(&quot;Expr&quot;);_newline    var sBC = Inputs.GetProperty(&quot;BC&quot;);_newline    var bc;_newline    try {_newline        bc = TheApplication().ActiveBusObject().GetBusComp(sBC);_newline        Outputs.SetProperty(&quot;Result&quot;, bc.InvokeMethod(&quot;EvalExpr&quot;, sExpr));_newline    } catch (e) {_newline        Outputs.SetProperty(&quot;Result&quot;, e.toString());_newline    } finally {_newline        bc = null;_newline    }_newline}"
 Program_spcLanguage="JS"
 Name="EvalExpr"
 Sequence="8"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function GetRRData(Inputs, Outputs) {_newline    try{_newline        var psCache = TheApplication().NewPropertySet();_newline        var psIn = TheApplication().NewPropertySet();_newline        var psOut = TheApplication().NewPropertySet();_newline        var psDef, cpsDef;_newline        var psAttr = TheApplication().NewPropertySet();_newline        var cpsAttr = TheApplication().NewPropertySet();_newline        var cc, i;_newline        var ccc = 0;_newline        //var raw = TheApplication().NewPropertySet();_newline        psIn.SetProperty(&quot;Object Type&quot;, Inputs.GetProperty(&quot;Object Type&quot;));_newline        psIn.SetProperty(&quot;Object Name&quot;, Inputs.GetProperty(&quot;Object Name&quot;));_newline        psOut = GetRawRRData(psIn);_newline        cc = psOut.GetChildCount();_newline_newline        //root_newline        psAttr = TranslateAttr(psOut, psCache);_newline        psOut.AddChild(psAttr);_newline        //end root_newline_newline        //level 1 children_newline        if (cc &gt; 0) {_newline            for (i = 0; i &lt; cc; i++) {_newline                psAttr = TheApplication().NewPropertySet();_newline                psDef = psOut.GetChild(i);_newline                //let&apos;s ignore scripts, they cause trouble_newline                if (psDef.GetType().indexOf(&quot;Script&quot;) == -1){_newline                    ccc = psDef.GetChildCount();_newline                    psAttr = TranslateAttr(psDef, psCache);_newline                    psOut.GetChild(i).AddChild(psAttr);_newline                    //level 2 children_newline                    if (ccc &gt; 0) {_newline                        for (var k = 0; k &lt; ccc; k++) {_newline                            cpsAttr = TheApplication().NewPropertySet();_newline                            cpsDef = psDef.GetChild(k);_newline                            cpsAttr = TranslateAttr(cpsDef, psCache);_newline                            psOut.GetChild(i).GetChild(k).AddChild(cpsAttr);_newline                        }_newline                    }//end level 2 children_newline                }_newline            }_newline        }//end level 1 children_newline_newline        Outputs.AddChild(psOut);_newline    }_newline    catch(e){_newline        //TheApplication().RaiseErrorText(&quot;Error in GetRRData: &quot; + e.toString());_newline    }_newline}"
 Program_spcLanguage="JS"
 Name="GetRRData"
 Sequence="16"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function GetRawRRData(Inputs) {_newline    try{_newline        var boTypeRR = TheApplication().GetBusObject(&quot;Runtime Repository Details&quot;);_newline        var bsWFUtils = TheApplication().GetService(&quot;Workflow Utilities&quot;);_newline        var psIn = TheApplication().NewPropertySet();_newline        var psOut = TheApplication().NewPropertySet();_newline        //use &quot;Type&quot; to get metameta_newline        var bcTypeRR = boTypeRR.GetBusComp(&quot;Runtime Repository &quot; + Inputs.GetProperty(&quot;Object Type&quot;));_newline        //eg. &quot;Field&quot; or &quot;Join&quot;..._newline        var sTypeRR = Inputs.GetProperty(&quot;Object Name&quot;);_newline        var sDef;_newline        bcTypeRR.ClearToQuery();_newline        bcTypeRR.ActivateField(&quot;Complied Obj Def&quot;);_newline        bcTypeRR.SetSortSpec(&quot;Created(DESCENDING)&quot;);_newline        bcTypeRR.SetSearchExpr(&quot;[Name] LIKE \&quot;&quot; + sTypeRR + &quot;\&quot;&quot;);_newline        bcTypeRR.ExecuteQuery(ForwardOnly);_newline        if (bcTypeRR.FirstRecord()) {_newline            sDef = bcTypeRR.GetFieldValue(&quot;Complied Obj Def&quot;);_newline            psIn.SetValue(sDef);_newline            bsWFUtils.InvokeMethod(&quot;TextToPropSet&quot;, psIn, psOut);_newline        }_newline    }_newline    catch(e){_newline        //TheApplication().RaiseErrorText(&quot;Error in GetRawRRData: &quot; + e.toString());_newline    }_newline    return psOut;_newline}_newline"
 Program_spcLanguage="JS"
 Name="GetRawRRData"
 Sequence="13"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function GetRepositoryDataObject (Inputs, Outputs)_newline{_newline    try{_newline    _newline        var appletBusObj = Inputs.GetProperty(&quot;Business Object&quot;); _newline        var appletBusComp = Inputs.GetProperty(&quot;Business Component&quot;);_newline        var getType = Inputs.GetProperty(&quot;Type&quot;);_newline        var nameType = Inputs.GetProperty(&quot;Name&quot;);_newline    _newline_newline        if(getType == &quot;FieldData&quot;)_newline        {_newline            var repositoryBusObj = TheApplication().GetBusObject(&quot;Repository Details&quot;);_newline            var repositoryBusComp = repositoryBusObj.GetBusComp(&quot;Repository Business Component&quot;);_newline            var repositoryField = repositoryBusObj.GetBusComp(&quot;Repository Field&quot;);_newline            var repositoryJoin = repositoryBusObj.GetBusComp(&quot;Repository Join&quot;);_newline            var repositoryJoinSpec = repositoryBusObj.GetBusComp(&quot;Repository Join Specification&quot;);_newline            var idBusComp = &quot;&quot;;_newline            var tableBusComp = &quot;&quot;;_newline            var join = &quot;&quot;;_newline            var column = &quot;&quot;;_newline            var mv = &quot;&quot;;_newline            var mvLink = &quot;&quot;;_newline            var calculated = &quot;&quot;;_newline            var calculatedValue = &quot;&quot;;_newline            var pickList = &quot;&quot;;_newline            var lov = &quot;&quot;;_newline            var fieldId = &quot;&quot;;_newline            var joinTable = &quot;&quot;;_newline            var joinId = &quot;&quot;;_newline            var joinDestinationColumn = &quot;&quot;;_newline            var joinSourceField = &quot;&quot;;_newline            var destinationField = &quot;&quot;;_newline            _newline            with(repositoryBusComp){_newline                ActivateField(&quot;Table&quot;);_newline                ClearToQuery();_newline                SetSearchExpr(&quot;[Name] = &apos;&quot; + appletBusComp + &quot;&apos; AND [Repository Name] = &apos;Siebel Repository&apos;&quot;);_newline                ExecuteQuery(ForwardOnly);_newline_newline                if (FirstRecord()) {_newline                idBusComp = GetFieldValue(&quot;Id&quot;);_newline                tableBusComp = GetFieldValue(&quot;Table&quot;);_newline                _newline                with(repositoryField){_newline                        ActivateField(&quot;Join&quot;);_newline                        ActivateField(&quot;Column&quot;);_newline                        ActivateField(&quot;Multi Valued&quot;);_newline                        ActivateField(&quot;Multi Value Link&quot;);_newline                        ActivateField(&quot;Calculated&quot;);_newline                        ActivateField(&quot;Calculated Value&quot;);_newline                        ActivateField(&quot;PickList&quot;);_newline                        ActivateField(&quot;PickList Type Value&quot;);_newline                        ActivateField(&quot;Dest Field&quot;);_newline                        ClearToQuery();_newline                        SetSearchExpr(&quot;[Parent Id] = &apos;&quot; + idBusComp + &quot;&apos; AND [Name] = &apos;&quot; + nameType + &quot;&apos;&quot;);_newline                        ExecuteQuery(ForwardOnly);_newline                    _newline                        if (FirstRecord()) {_newline                        join = GetFieldValue(&quot;Join&quot;);_newline                        column = GetFieldValue(&quot;Column&quot;);_newline                        mv = GetFieldValue(&quot;Multi Valued&quot;);_newline                        mvLink = GetFieldValue(&quot;Multi Value Link&quot;);_newline                        calculated = GetFieldValue(&quot;Calculated&quot;);_newline                        calculatedValue = GetFieldValue(&quot;Calculated Value&quot;);_newline                        pickList = GetFieldValue(&quot;PickList&quot;);_newline                        lov = GetFieldValue(&quot;PickList Type Value&quot;);_newline                        destinationField = GetFieldValue(&quot;Dest Field&quot;);_newline                        fieldId = GetFieldValue(&quot;Id&quot;);_newline                        _newline                        with(repositoryJoin){_newline                                ActivateField(&quot;Table&quot;);_newline                                ActivateField(&quot;Name&quot;);_newline                                ClearToQuery();_newline                                SetSearchExpr(&quot;[Parent Id] = &apos;&quot; + idBusComp + &quot;&apos; AND [Name] = &apos;&quot; + join + &quot;&apos;&quot;);_newline                                ExecuteQuery(ForwardOnly);_newline                                _newline                                if (FirstRecord()) {_newline                                    _newline                                    joinTable = GetFieldValue(&quot;Table&quot;);_newline                                    joinId = GetFieldValue(&quot;Id&quot;);_newline                                    _newline                                    with(repositoryJoinSpec){_newline                                        ActivateField(&quot;Destination Column&quot;);_newline                                        ActivateField(&quot;Source Field&quot;);_newline                                        ClearToQuery();_newline                                        SetSearchSpec(&quot;Parent Id&quot;, joinId);_newline                                        ExecuteQuery(ForwardOnly);_newline                                        _newline                                        if (FirstRecord()) {_newline                                            joinDestinationColumn = GetFieldValue(&quot;Destination Column&quot;);_newline                                            joinSourceField = GetFieldValue(&quot;Source Field&quot;);_newline                                        }_newline                                        _newline                                    }_newline                                }_newline                            }_newline                        }_newline                    }_newline                }_newline            }_newline_newline            Outputs.SetProperty(&quot;Field Name&quot;, nameType);_newline            Outputs.SetProperty(&quot;Table Buscomp&quot;, tableBusComp);_newline            Outputs.SetProperty(&quot;Join&quot;, join);_newline            Outputs.SetProperty(&quot;Column&quot;, column);_newline            Outputs.SetProperty(&quot;Multivalued&quot;, mv);_newline            Outputs.SetProperty(&quot;Multivalued Link&quot;, mvLink);_newline            Outputs.SetProperty(&quot;Calculated&quot;, calculated);_newline            Outputs.SetProperty(&quot;Calculated Value&quot;, calculatedValue);_newline            Outputs.SetProperty(&quot;Pick List&quot;, pickList);_newline            Outputs.SetProperty(&quot;Lov Type&quot;, lov);_newline            Outputs.SetProperty(&quot;Join Table&quot;, joinTable);_newline            Outputs.SetProperty(&quot;Join Dest Col&quot;, joinDestinationColumn);_newline            Outputs.SetProperty(&quot;Join Souce Field&quot;, joinSourceField);_newline            Outputs.SetProperty(&quot;Destination Field&quot;, destinationField);_newline_newline            _newline        }_newline    }_newline    catch(e){_newline        TheApplication().RaiseErrorText(&quot;Error in GetRepositoryDataObject: &quot; + e.toString());_newline    }_newline    finally {        _newline        repositoryJoinSpec = null;_newline        repositoryJoin = null;_newline        repositoryField = null;_newline        repositoryBusComp = null;_newline        repositoryBusObj = null;_newline        nameType = null;_newline        getType = null;_newline        appletBusComp = null;_newline        appletBusObj = null;_newline    }_newline    _newline    return(Outputs);_newline_newline}"
 Program_spcLanguage="JS"
 Name="GetRepositoryDataObject"
 Sequence="14"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function GetTypeRRFieldMap(Inputs, Outputs) {_newline    try{_newline        var psIn = TheApplication().NewPropertySet();_newline        var psOut = TheApplication().NewPropertySet();_newline        psIn.SetProperty(&quot;Object Type&quot;, &quot;Type&quot;);_newline        psIn.SetProperty(&quot;Object Name&quot;, Inputs.GetProperty(&quot;Object Type&quot;));_newline        psOut = GetRawRRData(psIn);_newline        var psDef, sAttr, arrAttr, ts;_newline        var arTypeRR = [];_newline        var arTypeNoCompRR = [];_newline        var arTypeFilteredRR = [];_newline        //kudos to Henrik T._newline        var arTypeNoExtRR = [];_newline_newline        var cc = psOut.GetChildCount();_newline        if (cc &gt; 0) {_newline            for (var i = 0; i &lt; cc; i++) {_newline                psDef = psOut.GetChild(i);_newline                sAttr = psDef.GetProperty(&quot;ATTRS&quot;);_newline                arrAttr = CleanAttributes(sAttr);_newline                for (var j = 0; j &lt; arrAttr.length; j++) {_newline                    ts = arrAttr[j];_newline_newline                    //Field name array_newline                    if (j == 3) {_newline                        arTypeRR.push(ts);_newline                    }_newline                    //array of &quot;No Compile&quot; flags_newline                    if (j == 4) {_newline                        arTypeNoCompRR.push(ts);_newline                    }_newline_newline                    //array of &quot;Extension&quot; flags_newline                    //kudos to Henrik T._newline                    if (j == 7) {_newline_newline                    arTypeNoExtRR.push(ts);_newline_newline                    }_newline                }_newline            }_newline        }_newline        /*_newline        //apply filter to get only compiled fields_newline        for (var k = 0; k &lt; arTypeNoCompRR.length; k++) {_newline            if (arTypeNoCompRR[k] == &quot;N&quot;) {_newline                arTypeFilteredRR.push(arTypeRR[k]);_newline            }_newline        }_newline        */_newline        //kudos to Henrik T._newline        //apply filter to get only compiled fields and no extension fields_newline_newline        for (var k = 0; k &lt; arTypeNoCompRR.length; k++) {_newline_newline            //if (arTypeNoCompRR[k] == &quot;N&quot;) {_newline_newline            if (arTypeNoCompRR[k] == &quot;N&quot; &amp;&amp; arTypeNoExtRR[k] == &quot;N&quot;) {_newline                arTypeFilteredRR.push(arTypeRR[k]);_newline_newline            }_newline_newline        }_newline        Outputs.SetProperty(&quot;RRFieldMap&quot;, arTypeFilteredRR.join(&quot;,&quot;));_newline    }_newline    catch(e){_newline       // TheApplication().RaiseErrorText(&quot;Error in GetTypeRRFieldMap: &quot; + e.toString());_newline    }_newline}"
 Program_spcLanguage="JS"
 Name="GetTypeRRFieldMap"
 Sequence="18"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function InspectWS (Inputs, Outputs)_newline{_newline    var name = Inputs.GetProperty(&quot;Name&quot;);_newline    var bInspect = (Inputs.GetProperty(&quot;Inspect&quot;) == &quot;Y&quot;);_newline    var iLimit = ToNumber(Inputs.GetProperty(&quot;Limit&quot;));_newline    var res = &quot;&quot;, sWS = &quot;&quot;;_newline    _newline    var bo = TheApplication().GetBusObject(&quot;Workspace&quot;);_newline    var bc = bo.GetBusComp(&quot;Repository Workspace&quot;);_newline    var ss = &quot;&quot;;_newline    if (name == &quot;&quot;) {_newline        ss = &apos;[Created By] = LoginId () AND [Status] &lt;&gt; &quot;Delivered&quot; AND [Repository Id] = RepositoryId()&apos;;_newline    } else if (name.match(/\[.*\]/g)) {_newline        ss = name;_newline    } else {_newline        ss = &apos;[Name] like &quot;&apos; + name + &apos;&quot; AND [Repository Id] = RepositoryId()&apos;;_newline    }_newline    _newline    try {_newline        bc.SetSearchExpr(ss);_newline        bc.SetViewMode(AllView);_newline        bc.SetSortSpec(&quot;Updated(DESC)&quot;);_newline        bc.ExecuteQuery(ForwardBackward);_newline        var h = bc.FirstRecord();_newline        if (h) {_newline            if (bInspect) {_newline                bc.InvokeMethod(&quot;OpenWS&quot;);_newline                bc.InvokeMethod(&quot;PreviewWS&quot;);_newline                sWS = bc.GetFieldValue(&quot;Name&quot;);_newline            } else {_newline                var aWS = [];_newline                var i = 1;_newline                while(h &amp;&amp; i &lt;= iLimit) {_newline                     aWS.push(bc.GetFieldValue(&quot;Name&quot;));_newline                     h = bc.NextRecord();_newline                     i++;_newline                }_newline                sWS = aWS.join(&quot;,&quot;);_newline            }_newline        } else {_newline            res = &quot;No workspace found with SearchSpec: &quot; + ss;_newline        }_newline    } catch(e) {_newline        res = &quot;Error happened inspecting a workspace with SearchSpec: &quot; + ss + &quot;\n&quot; + e.toString();_newline    } finally {_newline        bc = null;_newline        bo = null;_newline    }_newline    _newline    Outputs.SetProperty(&quot;Result&quot;, res);_newline    Outputs.SetProperty(&quot;Workspaces&quot;, sWS);_newline}"
 Program_spcLanguage="JS"
 Name="InspectWS"
 Sequence="19"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function ProcessLogRequest(Inputs, Outputs)_newline{_newline    var sFilePath = Inputs.GetProperty(&quot;FilePath&quot;);_newline    if (sFilePath == &quot;&quot;) sFilePath = &quot;/siebelfs/developer/&quot;; // Log the files to a subdirectory on the Siebel File System for global access_newline_newline    var bsSvc:Service = TheApplication().GetService(&quot;EAI File Transport&quot;);_newline    var psIn:PropertySet = TheApplication().NewPropertySet();_newline    var psOut:PropertySet = TheApplication().NewPropertySet();_newline    var oTransService:Service = TheApplication().GetService(&quot;Transcode Service&quot;);_newline    var oTransOutputs:PropertySet = TheApplication().NewPropertySet();_newline_newline    try_newline    {_newline        var sOperation = Inputs.GetProperty(&quot;Operation&quot;);_newline        var strLogin = TheApplication().LoginName();_newline        var sTraceMsg = Inputs.GetProperty(&quot;TraceMsg&quot;);_newline        var sTraceType = Inputs.GetProperty(&quot;TraceType&quot;);_newline        if (sOperation == &quot;ViewLog&quot;){_newline            var strKeepFile = Inputs.GetProperty(&quot;RetainFile&quot;);_newline_newline            psIn.SetProperty(&quot;FileName&quot;, sFilePath + strLogin + &quot;.log&quot;);_newline            psIn.SetProperty(&quot;FileSleepTime&quot;, &quot;1&quot;); // No need to wait around for the file (default is 20000 ms)_newline_newline            if (strKeepFile == &quot;false&quot;) psIn.SetProperty(&quot;DeleteFile&quot;, &quot;True&quot;); // Delete the file to keep the size down_newline_newline            bsSvc.InvokeMethod(&quot;Receive&quot;, psIn, psOut); // If the file doesn&apos;t exist, Siebel throws an error._newline_newline            // The output from EAI File Transport is in binary format.  Use Transcode to convert it to text._newline            psOut.SetProperty(&quot;ConversionMode&quot;, &quot;EncodingToString&quot;);_newline            psOut.SetProperty(&quot;SourceEncoding&quot;, &quot;UTF-8&quot;);_newline            oTransService.InvokeMethod(&quot;Convert&quot;, psOut, oTransOutputs);_newline            var strContent = oTransOutputs.GetValue();_newline_newline            var myOutput = strContent;//.split(&apos;\n&apos;).join(&apos;&lt;br&gt;&apos;); // replace the newline characters with HTML &lt;br&gt; tags for display in the dialog box_newline_newline            Outputs.SetProperty(&quot;myOutput&quot;, myOutput);_newline            Outputs.SetProperty(&quot;Status&quot;, &quot;File retrieved&quot;);_newline_newline        }_newline        else if (sOperation == &quot;StartLogging&quot;)_newline        {_newline            Outputs.SetProperty(&quot;Status&quot;, &quot;Logging Started&quot;);_newline            if (sTraceType == &quot;SQL&quot; || sTraceType == &quot;&quot;){_newline                TheApplication().TraceOn(sFilePath + strLogin + &quot;.log&quot;, &quot;SQL&quot;, &quot;&quot;);_newline            }_newline            if (sTraceType == &quot;Allocation&quot;){_newline                TheApplication().TraceOn(sFilePath + strLogin + &quot;.log&quot;, &quot;Allocation&quot;, &quot;All&quot;);_newline            }_newline        }_newline        else if (sOperation == &quot;StopLogging&quot;)_newline        {_newline            Outputs.SetProperty(&quot;Status&quot;, &quot;Logging Stopped&quot;);_newline            TheApplication().TraceOff();_newline        }_newline        else if (sOperation == &quot;Trace&quot;){_newline            TheApplication().Trace(sTraceMsg);_newline        }_newline        else_newline        {_newline            Outputs.SetProperty(&quot;Status&quot;, &quot;Unknown Operation argument &quot; + sOperation);_newline        }_newline    }_newline    catch (e)_newline    {_newline        Outputs.SetProperty(&quot;Error&quot;,e.toString());_newline        Outputs.SetProperty(&quot;Status&quot;,&quot;Error&quot;);_newline        Outputs.SetProperty(&quot;myOutput&quot;, &quot;&quot;);_newline    }_newline    finally_newline    {_newline        oTransOutputs = null;_newline        oTransService = null;_newline        psOut = null;_newline        psIn = null;_newline        bsSvc = null;_newline    }_newline}"
 Program_spcLanguage="JS"
 Name="ProcessLogRequest"
 Sequence="25"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function Service_usPreInvokeMethod(MethodName, Inputs, Outputs) {_newline    switch (MethodName) {_newline        case &quot;EvalExpr&quot;:_newline            EvalExpr(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline_newline        case &quot;EvalScript&quot;:_newline            EvalScript(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline_newline        case &quot;GetRepositoryDataObject&quot;:_newline            GetRepositoryDataObject(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline_newline        case &quot;ProcessLogRequest&quot;:_newline            ProcessLogRequest(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline_newline        case &quot;GetRowData&quot;:_newline            GetRowData(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline_newline        case &quot;SetRowData&quot;:_newline            SetRowData(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline_newline        case &quot;InspectWS&quot;:_newline            InspectWS(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline_newline        case &quot;GetRRData&quot;:_newline            GetRRData(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline_newline        case &quot;GetCodeFromServer&quot;:_newline            GetCodeFromServer(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline_newline        case &quot;BuildBSBoxTestCase&quot;:_newline            BuildBSBoxTestCase(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline        _newline        case &quot;GetSifNames&quot;:_newline            GetSifNames(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline_newline        case &quot;ExternalLog&quot;:_newline            ExternalLog(Inputs, Outputs);_newline            return CancelOperation;_newline            break;_newline    }_newline_newline    return ContinueOperation;_newline}_newline"
 Program_spcLanguage="JS"
 Name="Service_usPreInvokeMethod"
 Sequence="28"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function TranslateAttr(Inputs, psCache) {_newline    try{_newline        var psFilter = TheApplication().NewPropertySet();_newline        var psIn = TheApplication().NewPropertySet();_newline        var psAttr = TheApplication().NewPropertySet();_newline        var psDef = Inputs;_newline        var otype = &quot;&quot;;_newline        var sAttr = psDef.GetProperty(&quot;ATTRS&quot;);_newline        var arrAttr = CleanAttributes(sAttr);_newline        var rrfmap = &quot;&quot;;_newline        var arTypeFilteredRR;_newline        var ts;_newline        var fv = &quot;&quot;;_newline_newline        otype = psDef.GetType();_newline        if (psCache.GetProperty(otype) == &quot;&quot;) {_newline            psIn.SetProperty(&quot;Object Type&quot;, otype);_newline            GetTypeRRFieldMap(psIn, psFilter);_newline            rrfmap = psFilter.GetProperty(&quot;RRFieldMap&quot;);_newline            psCache.SetProperty(otype, rrfmap);_newline        }_newline        else {_newline            rrfmap = psCache.GetProperty(otype);_newline        }_newline_newline        arTypeFilteredRR = rrfmap.split(&quot;,&quot;);_newline_newline        for (var h = 0; h &lt; arrAttr.length; h++) {_newline            ts = arrAttr[h];_newline            fv = arTypeFilteredRR[h];_newline            psAttr.SetProperty(fv, ts);_newline        }_newline        psAttr.SetType(&quot;Properties&quot;);_newline    }_newline    catch(e){_newline       // TheApplication().RaiseErrorText(&quot;Error in TranslateAttr: &quot; + e.toString() + &quot;otype: &quot; + otype + &quot;***rrfmap: &quot; + rrfmap + &quot;***fv: &quot; + fv);_newline    }_newline    return psAttr;_newline}"
 Program_spcLanguage="JS"
 Name="TranslateAttr"
 Sequence="27"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function _uslog_usobj(o, s) {_newline    var res = &apos;&apos;;_newline    s = (&apos;undefined&apos; === typeof s? &apos;&apos; : s);_newline    /* traditional representation */_newline    res += s + o;_newline    s += &apos;\t&apos;;_newline    /* and also all available keys */_newline    for (var k in o) {_newline        try{_newline            var v = o[k];_newline            if (typeof v === &quot;object&quot;){_newline                res += String.fromCharCode(10) + _uslog_usobj(v, s);_newline        } else {_newline            res += String.fromCharCode(10) + s + k + &apos; = &apos; + v;_newline        }_newline        }catch(e){_newline            res += String.fromCharCode(10) + s + k + &apos; = &apos; + e.toString();_newline        }_newline    }_newline    return res;_newline}_newline"
 Program_spcLanguage="JS"
 Name="_uslog_usobj"
 Sequence="2"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function _uslog_usone(o){_newline    var val = &apos;&apos;;_newline    if (&apos;object&apos; === typeof o){ _newline        if(&apos;function&apos; == typeof o.toString &amp;&amp; o.toString() === &apos;[object PropertySet]&apos;) {_newline            val = String.fromCharCode(10) + _uslog_usps(o, &apos;\t&apos;);_newline        }else{_newline            val = String.fromCharCode(10) + _uslog_usobj(o, &apos;\t&apos;);_newline        }_newline    } else {_newline        val = o;_newline    }_newline    return val;_newline}_newline"
 Program_spcLanguage="JS"
 Name="_uslog_usone"
 Sequence="3"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function _uslog_usprint() {_newline    return _uslogs.join(String.fromCharCode(13));_newline}"
 Program_spcLanguage="JS"
 Name="_uslog_usprint"
 Sequence="4"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function _uslog_usps(o, s) {_newline    _newline    var res = &apos;&apos;;_newline    s = (&apos;undefined&apos; === typeof s ? &apos;&apos; : s);_newline    /* type */_newline    res += s + (o.GetType() ? o.GetType() : &apos;PropertySet&apos;);_newline    /* value */_newline    res += o.GetValue() ? &apos; = &apos; + o.GetValue() : &apos;&apos;;_newline    s += &apos;\t&apos;;_newline    /* properties */_newline    var p = o.GetFirstProperty();_newline    while (p) {_newline        res += String.fromCharCode(10) + s + p + &apos; = &apos; + o.GetProperty(p);_newline        p = o.GetNextProperty();_newline    }_newline    /* children */_newline    for (var i = 0; i &lt; o.GetChildCount(); i++) {_newline        res += String.fromCharCode(10) + _uslog_usps(o.GetChild(i), s);_newline    }_newline    _newline    return res;_newline}"
 Program_spcLanguage="JS"
 Name="_uslog_usps"
 Sequence="5"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function jlog() {_newline    var res = [];_newline    var numArguments = arguments.length;_newline    for (var i = 0; i &lt; numArguments; i++) {_newline        var actualArgument = arguments[i];_newline        var processOne = jlog_usone(actualArgument, i);_newline        res.push(processOne);_newline    }_newline_newline    _usjsonLogs.push(res.join(&quot;|&quot;));_newline}"
 Program_spcLanguage="JS"
 Name="jlog"
 Sequence="20"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function jlog_usone(o, k){_newline    var val = &apos;&apos;;_newline    var typeOfInput = typeof o;_newline    if (typeOfInput === &apos;object&apos;){_newline        var typeOfInputString = typeof o.toString;_newline        var inputString = o.toString();_newline        if(typeOfInputString == &apos;function&apos; &amp;&amp; inputString === &apos;[object PropertySet]&apos;) {_newline            val = &quot;\&quot;{&quot; + jlog_usps(o, k) + &quot;}\&quot;&quot;;_newline        }else{_newline            //val = _uslog_usobj(o, &apos;\t&apos;);_newline        }_newline    } else {_newline        val = o;_newline    }_newline    return val;_newline}_newline"
 Program_spcLanguage="JS"
 Name="jlog_usone"
 Sequence="21"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function jlog_usprint() {_newline    return _usjsonLogs.join(&quot;&quot;);_newline}"
 Program_spcLanguage="JS"
 Name="jlog_usprint"
 Sequence="22"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function jlog_usps(o, k) {_newline    _newline    var res = &apos;&apos;;_newline    _newline    /* Parent Type */_newline    res += o.GetType() ? &quot;\\\&quot;&quot; + o.GetType() + &quot; &quot; + k + &quot;\\\&quot;:{&quot; : &apos;\\\&quot;PropertySet &apos; + k + &apos;\\\&quot;:{&apos;;_newline    _newline    /* Parent Value */_newline    res += o.GetValue() ? &apos; : &apos; + o.GetValue() : &apos;&apos;;_newline    _newline    /* Properties */_newline    var p = o.GetFirstProperty();_newline    var nameProperty, valueProperty;_newline    while (p) {_newline        nameProperty = &quot;\\\&quot;&quot; + p + &quot;\\\&quot;&quot;;_newline        valueProperty = o.GetProperty(p).replace(/\&quot;/g, &quot;&apos;&quot;);_newline        valueProperty = o.GetProperty(p) ? &quot;\\\&quot;&quot; + valueProperty + &quot;\\\&quot;,&quot; : &quot;\\\&quot;\\\&quot;,&quot;;     _newline        res += nameProperty + &apos; : &apos; + valueProperty;_newline        p = o.GetNextProperty();_newline    }_newline    _newline    //Delete extra ,_newline    if(res.indexOf(&quot;ListOf&quot;) == -1){_newline        res = res.substring(0, res.length - 1);_newline    }_newline    _newline    /* children */_newline    if(o.GetChildCount() &gt; 0){_newline        if(res.indexOf(&quot;ListOf&quot;) == -1){_newline            res += &quot;,&quot;;_newline        }_newline        _newline        if(o.GetChildCount() &gt; 1){_newline            for (var i = 0; i &lt; o.GetChildCount(); i++) {_newline                if(i == o.GetChildCount() - 1){_newline                    res += jlog_usps(o.GetChild(i), i);_newline                } else {_newline                    res += jlog_usps(o.GetChild(i), i) + &quot;,&quot;;_newline                }_newline            }_newline        } else {_newline            for (var i = 0; i &lt; o.GetChildCount(); i++) {_newline                res += jlog_usps(o.GetChild(i), i);_newline            }_newline        }_newline        _newline        res += &quot;}&quot;;_newline        _newline    } else {_newline        res += &quot;}&quot;;_newline    }_newline    _newline    return res;_newline}_newline"
 Program_spcLanguage="JS"
 Name="jlog_usps"
 Sequence="23"
></Business_spcService_spcScript
><Business_spcService_spcScript
 Comments=""
 Parent_spcId="2-1MXY7SX"
 Parent_spcName="Utilities Service BS"
 Parent_spcInactive="N"
 Inactive="N"
 Script="function log() {_newline    var res = [];_newline    var hora = new Date();_newline    var hora_usactual = hora.getHours() + &quot;:&quot; + hora.getMinutes() + &quot;:&quot; + hora.getSeconds() + &quot;:&quot; + hora.getMilliseconds();_newline    res.push(hora_usactual);_newline    _newline    for (var i = 0; i &lt; arguments.length; i++) {_newline        res.push(_uslog_usone(arguments[i]));_newline    }_newline    _newline    _uslogs.push(res.join(&apos;\t|\t&apos;));_newline}_newline"
 Program_spcLanguage="JS"
 Name="log"
 Sequence="24"
></Business_spcService_spcScript
></Business_spcService
>